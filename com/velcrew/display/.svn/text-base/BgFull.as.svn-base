/* AS3	Copyright 2009 __velcrew__.		www.velcrew.com*/package  com.velcrew.display{	import flash.display.Sprite;	import flash.events.Event;	import flash.display.Stage;	import flash.display.DisplayObject;			 /**	 *		 *	Background FullScreen MovieClips Class v1.0	 *		 *	the bigest inovation on this class is the fact now you can choose the type of fullscreen	 *	the algoritm is based on FullScreenImage class from Josh Chernoff | josh@gfxcomplex.com -- > http://gfxcomlpex.com/labs/full-screen-image 	 *		 *	and add a a new event -- > Event.REMOVED_FROM_STAGE	 *		 *	NOTE: only movieclip/sprite can be used.	 *		 *	Background FullScreen MovieClips Class v0.1	 *	 *	@langversion ActionScript 3.0	 *	@playerversion Flash 9.0	 *	 *	@author Luis Teixeira aka Fraude	 *	@since  2009-04-07	 */		public class BgFull extends Sprite {				private var _reference  :Sprite;	    private var _tile  		:Sprite;		private var _lockRacio 	:Boolean;		private var _align 		:String;						public function BgFull(mc:Sprite, align:String = ""){						addEventListener( Event.ADDED_TO_STAGE, init );			addEventListener(Event.REMOVED_FROM_STAGE, onRemovedFromStage);			_reference = mc;			//_lockRacio = lockRacio;			_align = align;		}				private function init( event:Event ) : void		{						removeEventListener(Event.ADDED_TO_STAGE, init);		    stage.addEventListener(Event.RESIZE, fullBg);		    setBg();		}				private function setBg(e:Event = null):void		{			_tile = new Sprite();		    _tile = _reference;			//_tile.width = stage.stageWidth;			//_tile.height = stage.stageHeight;		    addChild(_tile);			fullBg();		}				private function fullBg(e:Event = null):void		{						if(_tile)			{				var sH:Number = stage.stageHeight;				var sW:Number = stage.stageWidth;								var image:DisplayObject;								switch(_align) {										case "TL":												_tile.width = sW;						_tile.scaleY = _tile.scaleX;												if (_tile.height < sH) {							_tile.height = sH;							_tile.scaleX = _tile.scaleY;						}												break;											case "T":						image = _tile.getChildAt(0);						image.x = -(image.width >> 1);						_tile.x = sW >> 1;												_tile.width = sW;						_tile.scaleY = _tile.scaleX;												if (_tile.height < sH) {							_tile.height = sH;							_tile.scaleX = _tile.scaleY;						}												break;											case "TR":						image = _tile.getChildAt(0);						image.x = -(image.width);						_tile.x = sW;												_tile.width = sW;						_tile.scaleY = _tile.scaleX;												if (_tile.height < sH) {							_tile.height = sH;							_tile.scaleX = _tile.scaleY;						}												break;												case "CL":						image = _tile.getChildAt(0);						image.y = -(image.height >> 1);						_tile.y = sH >> 1;												_tile.width = sW;						_tile.scaleY = _tile.scaleX;												if (_tile.height < sH) {							_tile.height = sH;							_tile.scaleX = _tile.scaleY;						}												break;												case "C":						image = _tile.getChildAt(0);						image.y = -(image.height >> 1);						image.x = -(image.width >> 1);												_tile.y = sH >> 1;						_tile.x = sW >> 1;												_tile.width = sW;						_tile.scaleY = _tile.scaleX;												if (_tile.height < sH) {							_tile.height = sH;							_tile.scaleX = _tile.scaleY;						}												break;											case "CR":						image = _tile.getChildAt(0);						image.y = -(image.height >> 1);						image.x = -(image.width);												_tile.y = sH >> 1;						_tile.x = sW;												_tile.width = sW;						_tile.scaleY = _tile.scaleX;												if (_tile.height < sH) {							_tile.height = sH;							_tile.scaleX = _tile.scaleY;						}												break;											case "BL":						image = _tile.getChildAt(0);						image.y = -(image.height);												_tile.y = sH;																		_tile.width = sW;						_tile.scaleY = _tile.scaleX;												if (_tile.height < sH) {							_tile.height = sH;							_tile.scaleX = _tile.scaleY;						}												break;											case "B":						image = _tile.getChildAt(0);						image.y = -(image.height);						image.x = -(image.width >> 1);												_tile.y = sH;						_tile.x = sW >> 1;												_tile.width = sW;						_tile.scaleY = _tile.scaleX;												if (_tile.height < sH) {							_tile.height = sH;							_tile.scaleX = _tile.scaleY;						}												break;																	case "BR":						image = _tile.getChildAt(0);						image.y = -(image.height);						image.x = -(image.width);												_tile.y = sH;						_tile.x = sW;												_tile.width = sW;						_tile.scaleY = _tile.scaleX;												if (_tile.height < sH) {							_tile.height = sH;							_tile.scaleX = _tile.scaleY;						}												break;											case "free":						_tile.width = stage.stageWidth;						_tile.height = stage.stageHeight;						break;											default:						_tile.width = stage.stageWidth;						_tile.height = stage.stageHeight;						trace("be careful ( or not (: ), you dont have choose any align type. so is a 'free' type. try to use 'free' type, if you dont whant see this trace")					break;				}			}		}				private function onRemovedFromStage(e:Event):void 		{			stage.removeEventListener(Event.RESIZE, fullBg);			}				public function removeThis()		{			stage.removeEventListener(Event.RESIZE, fullBg);		}	}	}